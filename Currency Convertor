import tkinter as tk
from tkinter import ttk, messagebox

# Static exchange rates for demo purposes
exchange_rates = {
    'USD': 1.0,
    'EUR': 0.92,
    'GBP': 0.79,
    'INR': 83.10,
    'JPY': 156.65,
    'RS':100.0,
}

class CurrencyConverterApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Currency Converter")
        self.root.geometry("400x250")
        self.root.resizable(False, False)

        # Title
        ttk.Label(root, text="Currency Converter", font=("Arial", 16, "bold")).pack(pady=10)

        # Amount input
        frame_input = ttk.Frame(root)
        frame_input.pack(pady=5)
        ttk.Label(frame_input, text="Amount: ").grid(row=0, column=0, padx=5)
        self.amount_entry = ttk.Entry(frame_input, width=20)
        self.amount_entry.grid(row=0, column=1)

        # From currency
        frame_from_to = ttk.Frame(root)
        frame_from_to.pack(pady=5)
        ttk.Label(frame_from_to, text="From: ").grid(row=0, column=0, padx=5)
        self.from_currency = ttk.Combobox(frame_from_to, values=list(exchange_rates.keys()), state='readonly')
        self.from_currency.grid(row=0, column=1)
        self.from_currency.current(0)

        # To currency
        ttk.Label(frame_from_to, text="To: ").grid(row=0, column=2, padx=5)
        self.to_currency = ttk.Combobox(frame_from_to, values=list(exchange_rates.keys()), state='readonly')
        self.to_currency.grid(row=0, column=3)
        self.to_currency.current(1)

        # Convert Button
        self.convert_button = ttk.Button(root, text="Convert", command=self.convert_currency)
        self.convert_button.pack(pady=10)

        # Result label
        self.result_label = ttk.Label(root, text="", font=("Arial", 12))
        self.result_label.pack(pady=10)

    def convert_currency(self):
        try:
            amount = float(self.amount_entry.get())
            from_curr = self.from_currency.get()
            to_curr = self.to_currency.get()

            if from_curr not in exchange_rates or to_curr not in exchange_rates:
                raise ValueError("Invalid currency selected.")

            converted = amount * exchange_rates[to_curr] / exchange_rates[from_curr]
            result_text = f"{amount:.2f} {from_curr} = {converted:.2f} {to_curr}"
            self.result_label.config(text=result_text)

        except ValueError:
            messagebox.showerror("Invalid input", "Please enter a valid numeric amount.")


# Run the GUI application
if __name__ == "__main__":
    root = tk.Tk()
    app = CurrencyConverterApp(root)
    root.mainloop()
